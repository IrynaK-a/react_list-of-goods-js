{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SortType","App","_useState","useState","_useState2","_slicedToArray","targetInnerText","setTargetInnerText","_useState3","_useState4","isReversed","setIsReversed","visibleGoods","goods","sortField","preparedGoods","_toConsumableArray","sort","good1","good2","localeCompare","length","reverse","getGoodsList","handleSort","e","currentTarget","innerText","_jsxs","className","children","_jsx","type","cn","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACY,sBADZA,EAEI,iBA0BGC,EAAM,WACjB,IAAAC,EAA8CC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAC1CI,EAAoCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,EA1Ba,SAACC,EAAOC,EAAWJ,GACtC,IAAIK,EAAaC,YAAOH,GAmBxB,OAjBIC,GACFC,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQL,GACN,KAAKd,EACH,OAAOkB,EAAME,cAAcD,GAC7B,KAAKnB,EACH,OAAOkB,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXX,IACFK,EAAgBA,EAAcO,WAGzBP,EAMcQ,CACnBxB,EAAiBO,EAAiBI,GAG9Bc,EAAa,SAACC,GAClBlB,EAAmBkB,EAAEC,cAAcC,YAYrC,OACEC,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UACEI,IACE,iBACA,CAAE,WAAY3B,IAAoBN,IAGtCkC,QAASV,EAAWM,SAEnB9B,IAGH+B,cAAA,UACEC,KAAK,SACLH,UACEI,IACE,oBACA,CAAE,WAAY3B,IAAoBN,IAGtCkC,QAASV,EAAWM,SAEnB9B,IAGH+B,cAAA,UACEC,KAAK,SACLH,UACEI,IACE,oBACA,CAAE,YAAavB,IAGnBwB,QA9Ce,SAACT,GACtBd,GAAc,SAAAwB,GAAI,OAAKA,MA6COL,SACzB,aAKExB,GAAmBI,IAEhBqB,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QArDM,WAClB3B,EAAmB,IACnBI,GAAc,IAmDmBmB,SACtB,aAOTC,cAAA,MAAAD,SACGlB,EAAawB,KAAI,SAAAC,GAAI,OACpBN,cAAA,MAAI,UAAQ,OAAMD,SAAaO,GAAPA,YC1HlCC,IAASC,OACPR,cAAC9B,EAAG,IACJuC,SAASC,eAAe,W","file":"static/js/main.0f30c67b.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SortType = {\n  alphabetically: 'Sort alphabetically',\n  length: 'Sort by length',\n};\n\nconst getGoodsList = (goods, sortField, isReversed) => {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.alphabetically:\n          return good1.localeCompare(good2);\n        case SortType.length:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [targetInnerText, setTargetInnerText] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getGoodsList(\n    goodsFromServer, targetInnerText, isReversed,\n  );\n\n  const handleSort = (e) => {\n    setTargetInnerText(e.currentTarget.innerText);\n  };\n\n  const handlleReverse = (e) => {\n    setIsReversed(prev => !prev);\n  };\n\n  const handleReset = () => {\n    setTargetInnerText('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-info',\n              { 'is-light': targetInnerText !== SortType.alphabetically },\n            )\n          }\n          onClick={handleSort}\n        >\n          {SortType.alphabetically}\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-success',\n              { 'is-light': targetInnerText !== SortType.length },\n            )\n          }\n          onClick={handleSort}\n        >\n          {SortType.length}\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )\n          }\n          onClick={handlleReverse}\n        >\n          Reverse\n        </button>\n\n        {\n          (targetInnerText || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={handleReset}\n              >\n                Reset\n              </button>\n            )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}